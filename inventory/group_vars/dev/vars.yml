# setup vars
environ:                "dev" # dev || stage || prod
debugging:              true

# private vars
login_user_passphrase:  "{{ vault_login_user_passphrase }}"

# ruby vars
chruby_ruby_version:     "ruby-2.2.2"
services_needs_jruby:    true

# apache vars:
hostname:               "{{ app_name }}"
domainname:             "test"

ssl_self_sign_cert:               false
ssl_provided_cert:                true
ssl_certificate_file:             "star_library_jhu_edu.crt"
ssl_certificate_content:          "{{ vault_ssl_certificate_content }}"
ssl_certificate_key_file:         "star_library_jhu_edu.key"
ssl_certificate_key_content:      "{{ vault_ssl_certificate_key_content }}"
ssl_certificate_chain_file:       "star_library_jhu_edu_interm.crt"
ssl_certificate_chain_content:    "{{ vault_ssl_certificate_chain_content }}"

# database config vars
# catalyst_db
catalyst_db_name:       "catalyst_dev"
catalyst_db_host:       "mysql.dev.mse.jhu.edu"
catalyst_db_user:       "{{ vault_catalyst_db_user }}"
catalyst_db_pass:       "{{ vault_catalyst_db_pass }}"
catalyst_db_port:       3306
# horizon_db
horizon_db_name:        "horizonstage"
horizon_db_host:        "horizontest.mse.jhu.edu"
horizon_db_user:        "{{ vault_horizon_db_user }}"
horizon_db_pass:        "{{ vault_horizon_db_pass }}"
horizon_db_port:        2025

# hip server vars
hip_host:               "hip-staging.library.jhu.edu"
horizon_ws_url:         "http://localhost:8080/ws" # default
borrower_ws_username:   "{{ vault_borrower_ws_username }}"
borrower_ws_password:   "{{ vault_borrower_ws_password }}"
force_default_jhed:     "{{ vault_force_default_jhed }}"

# borrow_direct vars
borrow_direct_host:     "bdtest.relaisd2d.com"

# solr vars
solr_url:               "http://catsolr04.mse.jhu.edu:8080/solr/catalyst_dev1"

# jetty vars
jetty_base:             "/opt/jetty"
jetty_user:             "jetty"
jetty_group:            "{{ jetty_user }}"
jetty_port:             8080

# firewalld vars:
findit_ip:               "10.11.12.102" # not really
firewalld_ipsets:
  - name: jetty_whitelist
    ips:
      - "{{ findit_ip }}"
      - "10.11.12.1" # ansible host machine
firewalld_richrules:
  - rule: 'rule family="ipv4" source ipset="jetty_whitelist" port port="{{ jetty_port }}" protocol="tcp" log prefix="jetty-access-allowed" level="info" limit value="1/m" accept'
    state: enabled
  - rule: 'rule family="ipv4" source NOT ipset="jetty_whitelist" port port="{{ jetty_port }}" protocol="tcp" log prefix="jetty-access-denied" level="info" limit value="1/m" reject'
    state: enabled
    # NOTE: this won't work (in leiu of the NOT whitelist reject rule). regardles of the order of the rules, both would be applied to the whitelisted IP (according to the logs), and access would be denied
    # TODO: write-up and remove
  # - rule: 'rule family="ipv4" source address="0.0.0.0/0" port port="{{ jetty_port }}" protocol="tcp" log prefix="jetty-access-denied" level="info" limit value="1/m" reject'
  #   state: disabled
firewalld_services:
  - service: http
  - service: https
  - service: ssh
