# setup vars
environ:                "dev" # dev || stage || prod
debugging:              true

# private vars
login_user_passphrase:  "{{ vault_login_user_passphrase }}"

# ruby vars
chruby_ruby_version:     "ruby-2.2.2"

# apache vars:
hostname:               "{{ app_name }}"
domainname:             "test"

ssl_self_sign_cert:               false
ssl_provided_cert:                true
ssl_certificate_file:             "star_library_jhu_edu.crt"
ssl_certificate_content:          "{{ vault_ssl_certificate_content }}"
ssl_certificate_key_file:         "star_library_jhu_edu.key"
ssl_certificate_key_content:      "{{ vault_ssl_certificate_key_content }}"
ssl_certificate_chain_file:       "star_library_jhu_edu_interm.crt"
ssl_certificate_chain_content:    "{{ vault_ssl_certificate_chain_content }}"

# database config vars
# catalyst_db
catalyst_db_name:       "catalyst_dev"
catalyst_db_host:       "mysql.dev.mse.jhu.edu"
catalyst_db_user:       "{{ vault_catalyst_db_user }}"
catalyst_db_pass:       "{{ vault_catalyst_db_pass }}"
catalyst_db_port:       3306
# horizon_db
horizon_db_name:        "horizonstage"
horizon_db_host:        "horizontest.mse.jhu.edu"
horizon_db_user:        "{{ vault_horizon_db_user }}"
horizon_db_pass:        "{{ vault_horizon_db_pass }}"
horizon_db_port:        2025

# hip server vars
hip_host:               "hip-staging.library.jhu.edu"
horizon_ws_url:         "http://localhost:8080/ws" # default
borrower_ws_username:   "{{ vault_borrower_ws_username }}"
borrower_ws_password:   "{{ vault_borrower_ws_password }}"
force_default_jhed:     "{{ vault_force_default_jhed }}"

# borrow_direct vars
borrow_direct_host:     "bdtest.relaisd2d.com"

#shib
shib_sp_cert:           "{{ vault_shib_sp_cert }}"
shib_sp_key:            "{{ vault_shib_sp_key }}"
shib_idp_metadata_xml:  "{{ vault_shib_idp_metadata_xml}}"
shib_entity_id:         "blacklight.mse.jhu.edu"
shib_idps:              "{{ vault_shib_idps }}"

# solr vars
solr_url:               "http://catsolr04.mse.jhu.edu:8080/solr/catalyst_dev1"

# jetty vars
jetty_base:             "/opt/jetty"
jetty_user:             "jetty"
jetty_group:            "{{ jetty_user }}"
jetty_port:             8080

# firewalld vars:
findit_ip:              "127.0.0.1" # obvious test value
firewalld_services:
  - service: http
  - service: https
  - service: ssh
firewalld_ports:
  - port: "{{ jetty_port }}"
    protocol: tcp
firewalld_richrules:
  - rule: 'rule family="ipv4" source address="{{ findit_ip }}" source-port port="{{ jetty_port }}" protocol="tcp" log prefix="jetty" level="info" accept'
