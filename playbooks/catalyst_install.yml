---
- name: install catalyst rails application
  hosts: catalyst

  pre_tasks:
  - name: install required packages
    package:
      name: "{{ item }}"
      state: present
    become: true
    with_items:
      - nodejs
      - "@Development tools"
      - mysql-devel

  tasks:
  - name: configure application user
    include: configure_app_user.yml

  - name: install rails for login user
    gem:
      name: rails
      version: "{{ rails_version }}"
      state: present
    become_user: "{{ item }}"
    with_items:
      - "{{ login_user }}"

  - name: make sure deploy dir exists
    file:
      path: "{{ deploy_dir }}"
      owner: "{{ login_user }}"
      state: directory
      recurse: true
    become: true

  - name: get application from repo
    git:
      repo: "{{ app_repo }}"
      dest: "{{ deploy_dir }}"
      version: "{{ app_branch | default('HEAD') }}"
      key_file: "{{ deploy_key_full_path }}"
      ssh_opts: "-o StrictHostKeyChecking=no"

  - name: configure bundle install based on mode
    set_fact:
      deployment_mode: false
  - set_fact:
      deployment_mode: true
    when: mode == "deploy"

  # NOTE: don't install spring in production environments:
  # https://github.com/projecthydra/hydra-head/issues/201
  - name: adjust for the rails environment
    set_fact:
      exclude: "development, test"
    when: rails_env == 'production'

  - name: install the project's gems for deployment
    bundler:
      chdir: "{{ deploy_dir }}"
      gem_path: "vendor/bundle"
      deployment_mode: "{{ deployment_mode }}"
      exclude_groups: "{{ exclude | default(omit) }}"

  - name: generate rails secret_key_base
    # TODO: use or lose
    # command: bash -lc "bundle exec rake secret"
    command: "openssl rand -hex 64"
    register: secret_key_base_result
    no_log: "{{ not debugging }}"

  - name: set secret_key_base
    set_fact:
      secret_key_base: "{{ secret_key_base_result.stdout }}"

  - name: Configure environment variables
    no_log: "{{ not debugging }}"
    template:
      src:  "templates/dotenv.j2"
      dest:  "{{ deploy_dir }}/.env"
    notify: restart apache

  # TODO: update to rails command upon updating rails version
  - name: precompile assets
    command: bash -lc "bundle exec rake assets:precompile"
    args:
      chdir: "{{ deploy_dir }}"
    when: rails_env == "production"
    # environment:
    #   RAILS_ENV: '{{ rails_env }}'
    #   SECRET_KEY_BASE: "{{ secret_key_base.stdout }}"

  - name: set ownership of deploy dir and contents
    file:
      path: "{{ deploy_dir }}"
      owner: "{{ app_user }}"
      group: "{{ app_group }}"
      state: directory
      recurse: true
    become: true
    notify: restart apache
    when: mode == "deploy"

  # TODO: refactor
  handlers:
  - name: restart apache
    service:
      name: "{{ apache_service }}"
      enabled: true
      state: restarted
    become: true
