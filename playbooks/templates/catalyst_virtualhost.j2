  ### skip
  # ServerName catalyst.library.jhu.edu
  # ServerAlias *.library.jhu.edu

  ### skip
  # DocumentRoot /opt/catalyst/app/current/public
  # <Directory /opt/catalyst/app/current/public>
  # 	Allow from all
  # 	Options -MultiViews
  # </Directory>

  ### skip
  # # Let Shib through!
  # <Location /Shibboleth.sso>
  #   PassengerEnabled off
  # </Location>

  ### discuss
  # allow capistrano to set app in maintenace mode or not
  # with `cap deploy:web:disable` or deploy:web:enable
  # More Info: http://www.shiftcommathree.com/articles/make-your-rails-maintenance-page-respond-with-a-503
  ErrorDocument 503 /system/maintenance.html
  RewriteEngine On
  RewriteCond %{REQUEST_URI} !.(css|gif|jpg|png)$
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
  RewriteRule ^.*$  -  [redirect=503,last]

  ### skip
  # # maybe more stuff
  # ErrorLog /var/log/httpd/catalyst.library.jhu.edu_error.log
  # LogLevel warn
  # CustomLog /var/log/httpd/catalyst.library.jhu.edu_access.log combined
  # ServerSignature Off

  ### discuss
  # KeepAlive: Whether or not to allow persistent connections (more than
  # one request per connection). Set to "Off" to deactivate. We choose
  # to have it on for efficiency.
  #
  KeepAlive On
  #
  # MaxKeepAliveRequests: The maximum number of requests to allow
  # during a persistent connection. Set to 0 to allow an unlimited amount.
  # We recommend you leave this number high, for maximum performance.
  #
  MaxKeepAliveRequests 100
  #
  # KeepAliveTimeout: Number of seconds to wait for the next request from the
  # same client on the same connection. Umlaut lowers to 5, less than default
  # 15, just to be safe.
  #
  KeepAliveTimeout 5

  ### skip
  # # Protect the shibboleth endpoint in the app
  # <Location /shibboleth_login>
  #   AuthType shibboleth
  #   ShibRequestSetting requireSession 1
  #   Require valid-user
  # </Location>

  ### keep
  ##
  # Redirects of legacy and standardized URLs to Catalyst Rails
  # URLs.
  # Use hard-coded hostname so that URLs coming in on 'catalog.library'
  # get redirected to proper hostname.
  ###

  ### discuss, works
  # permalink format we've used before
  # /bib/123455 => /catalog/bib_12345
  RewriteRule /bib/([^/]*)$ https://catalyst.library.jhu.edu/catalog/bib_$1? [R,L]
  # And with a format on the end, just pass it on
  RewriteRule /bib/([^/]*)/([^/]*)$ https://catalyst.library.jhu.edu/catalog/bib_$1.$2 [R,L]

  ### discuss, broken
  # HIP direct to bib lookup
  RewriteCond %{QUERY_STRING} index=BIB&term=(\d+)
  RewriteRule ^/ipac20/ipac\.jsp https://catalyst.library.jhu.edu/catalog/bib_%1? [R,L]

  ### discuss
  # Rails finger-printed assets, make them cached forever.
  # Try only match if the asset actually has a fingerprint in it.
  <LocationMatch "^/assets/.*-[0-9a-f]{32}.*$">
    Header unset ETag
    FileETag None
    # RFC says only cache for 1 year
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
  </LocationMatch>

  ### discuss
  # Let apache serve the pre-compiled .gz version of static assets,
  # if available, and the user-agent can handle it. Set all headers
  # correctly when doing so.
  #
  # SOMEWHAT EXPERIMENTAL. If you think it's causing problems,
  # just remove the following three LocationMatch.
  <LocationMatch "^/assets/.*\.(css|js)$">
    RewriteEngine on

    # Make sure the browser supports gzip encoding before we send it,
    # and that we have a precompiled .gz version.
    RewriteCond %{HTTP:Accept-Encoding} \b(x-)?gzip\b
    RewriteCond %{REQUEST_FILENAME}.gz -s
    RewriteRule ^(.+)$ $1.gz
  </LocationMatch>

  ### discuss
  # Make sure Content-Type is set for 'real' type, not gzip,
  # and Content-Encoding is there to tell browser it needs to
  # unzip to get real type.
  #
  # Make sure Vary header is set; while apache docs suggest it
  # ought to be set automatically by our RewriteCond that uses an HTTP
  # header, does not seem to be reliably working.
  <LocationMatch "^/assets/.*\.css\.gz$">
      ForceType text/css
      Header set Content-Encoding gzip
      Header add Vary Accept-Encoding
  </LocationMatch>

  <LocationMatch "^/assets/.*\.js\.gz$">
      ForceType application/javascript
      Header set Content-Encoding gzip
      Header add Vary Accept-Encoding
  </LocationMatch>
